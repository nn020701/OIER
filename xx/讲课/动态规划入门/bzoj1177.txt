#include <cstdio>
#include <algorithm>
using namespace std;
int n,m,k,cnt,ans,a[1501][1501],line[1501],row[1501],f[1501][1501],s[1501][1501],g[1501][1501],p[1501][1501],h[1501][1501];
int main()
{
    scanf("%d%d%d",&n,&m,&k);
    for(int i=1;i<=n;i++)
     for(int j=1;j<=m;j++){
         scanf("%d",&a[i][j]),
	s[i][j]=s[i-1][j]+s[i][j-1]-s[i-1][j-1]+a[i][j];
         if(i>=k&&j>=k)
	f[i][j]=max(f[i-1][j],max(f[i][j-1],s[i][j]-s[i][j-k]-s[i-k][j]+s[i-k][j-k]));
     }
    for(int i=n-k+1;i;i--)
     for(int j=k;j<=m;j++)
	g[i][j]=max(g[i+1][j],max(g[i][j-1],s[i+k-1][j]-s[i-1][j]-s[i+k-1][j-k]+s[i-1][j-k]));
    for(int i=k;i<=n;i++)
     for(int j=m-k+1;j;j--)
	h[i][j]=max(h[i-1][j],max(h[i][j+1],s[i][j+k-1]-s[i][j-1]-s[i-k][j+k-1]+s[i-k][j-1]));
    for(int i=n-k+1;i;i--)
     for(int j=m-k+1;j;j--)
	p[i][j]=max(p[i+1][j],max(p[i][j+1],s[i+k-1][j+k-1]-s[i+k-1][j-1]-s[i-1][j+k-1]+s[i-1][j-1]));
    for(int i=k;i<=n;i++)
     for(int j=k;j<=m;j++)
	line[i]=max(line[i],s[i][j]-s[i][j-k]-s[i-k][j]+s[i-k][j-k]);
    for(int i=k;i<=m;i++)
     for(int j=k;j<=n;j++)
	row[i]=max(row[i],s[j][i]-s[j-k][i]-s[j][i-k]+s[j-k][i-k]);
    for(int i=k;i<=n;i++){
	cnt=0;
	for(int j=i+k;j<=n;j++)cnt=max(cnt,line[j]),
	ans=max(ans,cnt+f[i][m]+p[j+1][1]);
}
    for(int i=k;i<=m;i++){
	cnt=0;
	for(int j=i+k;j<=m;j++)cnt=max(cnt,row[j]),
	ans=max(ans,cnt+f[n][i]+p[1][j+1]);
}
    for(int i=k;i<=n-k;i++)
	for(int j=k;j<=m-k;j++)
	ans=max(ans,max(f[i][m]+g[i+1][j]+p[i+1][j+1],p[i+1][1]+f[i][j]+h[i][j+1]));
    for(int i=k;i<=m-k;i++)
	for(int j=k;j<=n-k;j++)
	ans=max(ans,max(f[n][i]+h[j][i+1]+p[j+1][i+1],f[j][i]+g[j+1][i]+p[1][i+1]));
    printf("%d\n",ans);
}